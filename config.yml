title: Creating a Release Based Workflow
tagline: Learn and practice a workflow based around creating releases on GitHub.
description: This course focuses on releases, and more complex branching strategies.
tags:
  - GitHub
template:
    name: release-based-workflow
    repo: release-workflow-template
before:
  - type: updateBranchProtection
  - type: createIssue
    title: Welcome
    body: 00.1_welcome.md
  - type: octokit
    method: projects.createRepoProject
    owner: '%payload.repository.owner.login%'
    repo: '%payload.repository.name%'
    name: Release 1.0
    body: This project board tracks the steps necessary for Release 1.0.
    action_id: project # Added this!
  - type: octokit
    method: projects.createProjectColumn
    project_id: '%actions.project.data.id%'
    name: To Do
  - type: octokit
    method: projects.createProjectColumn
    project_id: '%actions.project.data.id%'
    name: In progress
  - type: octokit
    method: projects.createProjectColumn
    project_id: '%actions.project.data.id%'
    name: Done
steps:
  #1
  - title: Create a beta release (pre-release)
    description: Create a release from an existing codebase.
    event: release.published
    link: '{{ repoUrl }}/issues/1'
    actions:
      - type: createIssue
        title: Bug found, please fix
        body: 01.1_bug-issue.md # Change this from a bug issue to a tracking issue. This issue will include the steps in prepping for a release: (1) add this tracking issue the project board (2) create the release branch (3) create a PR for the release. Please add this card to the project board I've created.
        action_id: bugIssue
    #  - TODO bot: create a release branch using the `release-*` convention
    #  - TODO bot: set up branch protections using wildcards for branch name
      - type: respond
        issue: Welcome
        with: 01.2_next-step.md
        data:
          url: '%actions.bugIssue.data.html_url%'
          releases: '{{ repoURl }}/releases'
      - type: closeIssue
        issue: Welcome

  #2
  - title: Prepare for the next release
    description: Add a card to the "in progress" column of the project board.
    event: project_card.created
    link: '{{ repoURL }}/projects/1'
    actions:
      - type: respond # TODO: replace this with new issue
        with: 02.1_fix-bug.md # TODO: edit this response to note that it should be based on the release branch
        issue: 2
      # TODO: add a response acknowledging the user's action, pointing to new bug issue

  #3
  - title: Fix the bug
    description: Create a branch, fix the bug, and open a pull request.
    event: pull_request.opened
    link: '{{ repoUrl }}/issues/2'
    actions:
      # TODO: validate base branch
      # TODO: explanation of the branch protections for the release branch
      # TODO: bot approves

      # TODO: remove the response file below
      # - type: createReview
      #   body: 03.1_request-changes.md
      #   event: REQUEST_CHANGES

  #4
  - title: Merge the pull request
    description: Merge the pull request to update the release branch.
    event: pull_request.closed
    link: '{{ repoURL }}/pull/3'
    actions:
      - type: gate
        left: '%payload.pull_request.merged%'
        else:
          - type: octokit
            method: issues.edit
            state: open
            owner: '%payload.repository.owner.login%'
            repo: '%payload.repository.name%'
            number: '%payload.repository.pull_request.number%'
          - type: respond
            with: 06.1_early-close.md

    #5 
    - title: Prepare to merge your release into master
      description: # TODO
      event: pull_request.opened
      link: # TODO
      actions:
        # TODO: add a gate to check the proper base, proper branch being PRed
        # TODO: create 1+ PRs (and project cards, etc) of other work that will go into the release branch, 

    #6 
    - title: Review other work for this release
      description: #TODO
      event: pull_request_review.submitted
      actions:
        # TODO: merge approved PRs
        # TODO: create an issue for the probot app
        # TODO: comment pointing to issue ^

    #7
    - title: Install the probot app that automates the release or changelog
      description: #TODO
      event: #TODO
      actions: 
        # TODO: approve release PR, ask user to install app
        # TODO: comment and close this issue, point to release PR

    #8
    - title: Merge the release PR
      description: #TODO
      event: pull_request.closed
      actions:
        # Probot app creates a draft release
        # TODO: open a new issue with instructions for finalizing the release
        # TODO: comment in PR opointing to new issue

#--------- from here on it's legacy content ------------

  - title: Create a release branch
    description: Create a release branch that will represent work for a specific release.
    event: create
    link: '{{ repoURL }}/pull/3'
    actions:      #store the branch name for use in step 6
      - type: respond
        with: 04.1_release-branch.md
        issue: 3

  #5
  - title: Edit a pull request
    description: Edit the pull request to introduce the bug fix into the release branch.
    event: pull_request.edited
    link: '{{ repoURL }}/pull/3'
    actions:
      - type: removeBranchProtection
      - type: createReview
        body: 05.1_merge.md
        event: APPROVE

  #6
  - title: Merge the pull request
    description: Merge the pull request to update the release branch.
    event: pull_request.closed
    link: '{{ repoURL }}/pull/3'
    actions:
      - type: gate
        left: '%payload.pull_request.merged%'
        else:
          - type: octokit
            method: issues.edit
            state: open
            owner: '%payload.repository.owner.login%'
            repo: '%payload.repository.name%'
            number: '%payload.repository.pull_request.number%'
          - type: respond
            with: 06.1_early-close.md
      - type: updateBranchProtection
      - type: createPullRequest
        title: Merge the release branch into master
        body: 06.2_bot-pr.md
        head: v1.0 #for testing purposes only, should be replaced by variable in step 4
        action_id: releasePR
      - type: respond
        with: 06.3_nice-merge.md
        data:
          url: '%actions.releasePR.data.html_url%'
      - type: closeIssue
        issue: 2
        # update project board


  #7
  - title: Approve a pull request
    description: Review and approve the pull request that Learning Lab opened.
    event: pull_request_review.submitted
    link: '{{ repoURL }}/pull/5'
    actions:
      # - type: gate #make sure it was approval
      - type: mergePullRequest
      - type: octokit
        method: gitdata.deleteReference
        owner: '%payload.repository.owner.login%'
        repo: '%payload.repository.name%'
        ref: heads/v1.0 #this should also be taken from a variable
      - type: createIssue
        title: Creating a release
        body: 07.1_create-release.md
        action_id: nextIssue
      - type: respond
        with: 07.2_point-to-issue.md
        issue: 4
        data:
          url: '%actions.nextIssue.data.html_url%'

  #8
  - title: Create a final release & changelog
    description: Create a release with the most recent code, and craft release notes as a changelog.
    event: release.published
    link: '{{ repoURL }}/issues/6'
    actions:
      - type: respond
        with: 08.1_congratulations.md
        issue: 5
